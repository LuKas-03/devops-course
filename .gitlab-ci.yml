---
stages:
  - test
  - deploy

test:
  stage: test
  image: python:3.8-alpine
  script:
    - pip install -r requirements.txt
    - python manage.py test
    
production:
  stage: deploy
  only:
    - master
  image: docker:latest
  services:
    - docker:dind
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:alpha
  script:
    - docker login -u _ -p $HEROKU_TOKEN registry.heroku.com
    - docker build -f Dockerfile --iidfile imageid.txt -t $HEROKU_DOCKER_IMAGE_TAG .
    - docker push $HEROKU_DOCKER_IMAGE_TAG
    - apk add --no-cache curl
    - echo "Docker Image ID is $(cat imageid.txt)"
    - |-
      curl -X PATCH https://api.heroku.com/apps/espor-project/formation --header "Content-Type: application/json" --header "Accept: application/vnd.heroku+json; version=3.docker-releases" --header "Authorization: Bearer ${HEROKU_TOKEN}" --data '{ "updates": [ { "type": "web", "docker_image": "'$(cat imageid.txt)'" } ] }'